/* You can add global styles to this file, and also import other style files */
@import "~@angular/material/prebuilt-themes/deeppurple-amber.css";

@import "~font-awesome/css/font-awesome.min.css";

@import '~@swimlane/ngx-datatable/release/index.css';
@import '~@swimlane/ngx-datatable/release/themes/material.css';
@import '~@swimlane/ngx-datatable/release/assets/icons.css';

@import "~codemirror/lib/codemirror.css";
@import "~codemirror/theme/idea.css";

@import "~cytoscape-panzoom/cytoscape.js-panzoom.css";
@import "~qtip2/dist/jquery.qtip.min.css";

@font-face { font-family: "Noto Sans"; src: url("resources/fonts/NotoSans-Regular.ttf")format("opentype"); } 
@font-face { font-family: "Noto Sans Bold"; src: url("resources/fonts/NotoSans-Bold.ttf")format("opentype"); }
// @font-face { font-family: "Noto Sans"; src: url("resources/fonts/NotoSansKR-Regular.otf")format("opentype"); } 
// @font-face { font-family: "Noto Sans Bold"; src: url("resources/fonts/NotoSansKR-Bold.otf")format("opentype"); }
@font-face { font-family: "Noto Sans Mono"; src: url("resources/fonts/NotoSansMonoCJKkr-Regular.otf")format("opentype"); }
@font-face { font-family: "Noto Sans Mono Bold"; src: url("resources/fonts/NotoSansMonoCJKkr-Bold.otf")format("opentype"); }
@font-face { font-family: "RobotoMono"; src: url("resources/fonts/RobotoMono-Regular.ttf")format("opentype"); }
@font-face { font-family: "RobotoMono Bold"; src: url("resources/fonts/RobotoMono-Bold.ttf")format("opentype"); }

*, ::before, ::after { 
  box-sizing: border-box; 
}

html, body, material-app  {
  width: 100%;
  height: 100vh;
  font-size: 16px;   
  -webkit-font-smoothing: antialiased;
}

h1, h2, h3, h4, h5, h6 {   
  font-weight: 400; 
}

h1, h2, h3, h4, h5, h6, 
ul, html, body, material-app, input, textarea, .mat-menu-item { 
  margin: 0; 
  padding: 0; 
  font-family: "Noto Sans", "Noto Sans Bold", sans-serif !important;
}

ul { list-style: none; }

// Custom style for loading elements without height

.will-load { min-height: 80px; }


/* 최초 기본 콘텐츠의 사이즈로써 
header값이 변경될 경우 px의 header 높이값과 동일하게 변경해야한다. */

.content { 
  padding: 1.875rem; 
}

/* flex 기본 설정값으로 col-side는 side의 너비값을 줄 경우, 
반대쪽 div 에 col 주입한다. */

.row { display: flex; }
.col { display: flex; flex-direction: column; }

.row-center { 
  display: flex; 
  justify-content: space-between; 
  align-items: center; 
}

.col-strech { 
  width: 100%; 
  flex: 1 
}

// 빈 공란

.example-spacer { flex: 1 1 auto; }
 

/* 그래프 내에 있는 아이콘집합 
(기본설정 그래프의 오른쪽이며 위치변경시 border값 수정필요) */

.col-side-icon {
  background: #f5f5f5; 
  width: 50px; 
  border: 1px solid #ddd; 
  border-left: 0; 

  li {
    height: 50px; 
    display: flex; 
    justify-content: center; 
    align-items: center; 
    border-bottom: 1px solid #ddd;     

    :hover {
      color: #848484; 
    }
  }
}


/* margin 값으로  margin 값을 추가하고자 할 때, 
클래스명은 "m-value" */

.m-30 { margin-top: 1.875rem; }


/* button 관련 정리로 
추후 theme을 가진 button도 추가예정 */

a { 
  display: inline-flex; 
  text-decoration: none; 
  color: inherit; 
  cursor: pointer; 
}

mat-icon { 
  color: #afc1c1; 
}

.mat-button, .mat-fab, .mat-flat-button, 
.mat-icon-button, .mat-mini-fab, 
.mat-raised-button, .mat-stroked-button {
  font-size: 12px; 
  font-family: "Noto Sans", "Noto Sans Bold", sans-serif !important;
}

.mat-button-toggle { color: #798694; }

.mat-button-toggle-group, 
.mat-button-toggle-standalone,
.ngx-datatable.material {
  box-shadow: none !important; 
  font-size: .8125rem; 
}

.mat-button-toggle-disabled,
.mat-button-toggle-disabled.mat-button-toggle-checked { 
  background: transparent; 
  color: #f9f9f9;
}

/* 기본 설정 datatable css 수정 
datatable의 세팅값은 각 태그에 존재함*/

.expand-cell { color: #585858; }

.datatable-header-cell { 
  background: #f5f5f5; 
  border-bottom: 0; 
}

.ngx-datatable .datatable-body .datatable-scroll { width: 100% !important; }
.ngx-datatable.material .datatable-header { border-bottom: 0; }
.ngx-datatable.material .datatable-footer { margin-top: -4px; }
.ngx-datatable.material .empty-row { line-height: 28px; }

.datatable-body-cell-label {
  display: flex; 
  align-items: center; 
}

.ngx-datatable.material .datatable-body .datatable-body-row .datatable-body-cell {
  display: flex; 
  align-items: center; 
  padding: .8rem 1.2rem; 
  border-top: 1px solid #f5f5f5; 
  font-size: .8125rem; 
  color: #585858;
}

// datatable active 되었을 때 애니메이션 
.ngx-datatable.material.single-selection .datatable-body-row.active, 
.ngx-datatable.material.single-selection .datatable-body-row.active .datatable-row-group, 
.ngx-datatable.material.multi-selection .datatable-body-row.active, 
.ngx-datatable.material.multi-selection .datatable-body-row.active .datatable-row-group, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active .datatable-row-group {
  background: #f1f9f9; 
}

// datatable hover 되었을 때의 애니메이션 
.ngx-datatable.material.single-selection .datatable-body-row.active:hover, 
.ngx-datatable.material.single-selection .datatable-body-row.active:hover .datatable-row-group, 
.ngx-datatable.material.multi-selection .datatable-body-row.active:hover, 
.ngx-datatable.material.multi-selection .datatable-body-row.active:hover .datatable-row-group, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active:hover, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active:hover .datatable-row-group {
  background: #f1f9f9; 
  cursor: pointer;
}

.ngx-datatable.material:not(.cell-selection) .datatable-body-row:hover, 
.ngx-datatable.material:not(.cell-selection) .datatable-body-row:hover .datatable-row-group {
  transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); 
  cursor: pointer;
}

//
.ngx-datatable.material .datatable-body .datatable-row-detail { 
  background: #f8f9f9; 
  padding: .4rem 1.25rem; 
  border: 1px dashed #eee; 
}

/* 기본 graph canvas의 창 값으로
좌우 정렬일 경우, 각 html에는 좌측의 사이즈를 
해당 scss파일에서 설정가능 */

div.graph-canvas { 
  max-width: 100%; 
  border: 1px solid #ddd; 
  position: relative;
  z-index: 10;

  // zoom 버튼 위치수정 
  div.cy-panzoom { 
    top: 1.25rem; 
    left: 1.25rem; 
  }
  // 이값으로 인해 canvas의 좌우폭이 조절됨
  > div:nth-child(2), > div:nth-child(3) {
    width: 100% !important; 
  }
}

mat-chip-list {
  position: absolute; 
  bottom: 1.25rem; 
  left: 1.875rem; 
}


/* 각 페이지의 기본 input 값 설정 
*/

form, input { 
  width: 100%; 
  font-size: .875rem; 

  &.padding { padding: 1.25rem; }
  &.border { border: 1px dashed #ddd; }
  &.margin { margin-top: 1.5625rem}

  textarea {
    width: 100%; 
    height: 22px; 
    line-height: 24px; 
    border: none;
    outline: none; 
    resize: none; 
  }
}

span.search {
  position: relative; 

  input {
    width: 300px; 
    padding: .4rem 1.25rem;  
    border: 1px solid #ddd; 
    border-radius: 1rem; 
    outline: none; 
    font-size: .75rem; 
    color: #8a8d92; 
  }
  mat-icon { 
    font-size: 22px; 
    color: #ea1347; 
    top: 5px; 
    right: 10px; 
    position: absolute; 
  }
}

.mat-form-field.block {
  display: block; 
}

/* tab 관련 스타일 변경 
*/

.mat-tab-group.mat-primary .mat-ink-bar, 
.mat-tab-nav-bar.mat-primary .mat-ink-bar {
  background: #1bc9e4; 
}

.mat-tab-body-wrapper { 
  margin-top: 15px; 
}

/* CodeMirror
*/

.CodeMirror { 
  font-family: "RobotoMono","RobotoMono Bold", sans-serif !important;
  font-size: 13px; 
  font-weight: 400; 
}

.CodeMirror pre { 
  padding: 0 1.25rem; 
}

.CodeMirror-gutter-wrapper {
  left: -36px !important; 
}

/* Drop menu  
*/
.mat-subhead { 
  padding: 1rem; 
  display: inline-block;
}

.mat-menu-item {
  font-size: .75rem; 
}

// 텍스트 타이틀 옆에 붙는 before
.expand-cell::before, 
.empty-row::before, 
.mat-subhead::before {
  content:'';
  background: #1bc9e4; 
  width: 8px; 
  height: 8px; 
  display: inline-block; 
  border-radius: 50%; 
  margin-right: .75rem; 
}

// dialog 관련 css 수정 

.mat-form-field-appearance-legacy .mat-form-field-underline {
  background: #ddd; 
}
.mat-dialog-actions { flex-direction: row-reverse; }

p.subtext { 
  font-size: .75rem; 
  color: #aeb1b4; 
}

// label 관련 css 수정
