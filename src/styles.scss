/* You can add global styles to this file, and also import other style files */
@import "~@angular/material/prebuilt-themes/deeppurple-amber.css";

@import "~font-awesome/css/font-awesome.min.css";

@import '~@swimlane/ngx-datatable/release/index.css';
@import '~@swimlane/ngx-datatable/release/themes/material.css';
@import '~@swimlane/ngx-datatable/release/assets/icons.css';

@import "~codemirror/lib/codemirror.css";
@import "~codemirror/theme/idea.css";

@import "~cytoscape-panzoom/cytoscape.js-panzoom.css";
@import "assets/css/jquery.qtip.min.css";

@font-face { font-family: "Noto Sans"; src: url("resources/fonts/NotoSans-Regular.ttf")format("opentype"); } 
@font-face { font-family: "Noto Sans Bold"; src: url("resources/fonts/NotoSans-Bold.ttf")format("opentype"); }
// @font-face { font-family: "Noto Sans"; src: url("resources/fonts/NotoSansKR-Regular.otf")format("opentype"); } 
// @font-face { font-family: "Noto Sans Bold"; src: url("resources/fonts/NotoSansKR-Bold.otf")format("opentype"); }
@font-face { font-family: "Noto Sans Mono"; src: url("resources/fonts/NotoSansMonoCJKkr-Regular.otf")format("opentype"); }
@font-face { font-family: "Noto Sans Mono Bold"; src: url("resources/fonts/NotoSansMonoCJKkr-Bold.otf")format("opentype"); }
@font-face { font-family: "RobotoMono"; src: url("resources/fonts/RobotoMono-Regular.ttf")format("opentype"); }
@font-face { font-family: "RobotoMono Bold"; src: url("resources/fonts/RobotoMono-Bold.ttf")format("opentype"); }

*, ::before, ::after { 
  box-sizing: border-box; 
}

html, body, material-app  {  
  width: 100%;
  height: 100vh;
  font-size: 16px;   
  -webkit-font-smoothing: antialiased;

  @media ( max-width: 1440px ) { font-size: 14.5px; }
  @media ( max-width: 1280px ) { font-size: 11.5px; }

}

h1, h2, h3, h4, h5, h6 {   
  font-weight: 400; 
  color: #242424;
}

h1, h2, h3, h4, h5, h6, 
ul, html, body, material-app, input, textarea, .mat-menu-item, pre, .mat-tab-label { 
  margin: 0; 
  padding: 0; 
  font-family: "Noto Sans", "Noto Sans Bold", sans-serif !important;
  list-style: none;
}

// Custom style for loading elements without height

.will-load { min-height: 80px; }


/* 최초 기본 콘텐츠의 사이즈로써 
header값이 변경될 경우 px의 header 높이값과 동일하게 변경해야한다. */

.content { 
  height: calc(100% - 64px);
  padding: 1.875rem; 
}

/* flex 기본 설정값으로 col-side는 side의 너비값을 줄 경우, 
반대쪽 div 에 col 주입한다. */

.row { display: flex; }
.col { display: flex; flex-direction: column; }

.row-center { 
  display: flex; 
  justify-content: space-between; 
  align-items: center; 
}

.row-side { margin-right: 1.875rem; }
.col-side { margin-bottom: 1.875rem; }

.wrap { flex-wrap: wrap}

.strech { 
  width: 100%; 
  height: 100%; 
  flex: 1; 
  position: relative;
}

// 빈 공란 
.example-spacer { flex: 1 1 auto; }

//  color 테마값

mat-icon { width: 1.5rem !important; height: 1.5rem !important; color: #afc1c1; }
.material-icons { font-size: 1.5rem !important; }
.theme { background: #f5f5f5; }
.mat-button-toggle { color: #798694; }
.expand-cell { color: #585858; }
 
/* margin 값으로  margin 값을 추가하고자 할 때, 
클래스명은 "m-value" */

.m-30 { margin-top: 1.875rem; }
.m-24 { margin-top: 1.5625rem;}
.m-20 { margin-top: 1.25rem; }
.m-10 { margin-top: .625rem; }

.p-20 { padding: 1.25rem; }
.p-10 { padding: .625rem; }

.border { border: 1px solid #ddd;  
  &.border-dotted { border-style: dotted; } 
  &.border-dashed { border-style: dashed; }
}

.border-bottom { border-bottom: 1px solid #ddd; }

.border-left-no { border-left: none; }
.border-top-no { border-top: none; }

ul.border {
  &.noborder { border: none }  
  > li { border-bottom: 1px solid #ddd; }
}

.mat-menu-item, .sub-title { font-size: .75rem; color: #aeb1b4; } 

/* button 관련 정리로 
추후 theme을 가진 button도 추가예정 */

a { 
  display: inline-flex; 
  text-decoration: none; 
  color: inherit; 
  cursor: pointer; 
}

.mat-button, .mat-fab, .mat-flat-button, 
.mat-icon-button, .mat-mini-fab, 
.mat-raised-button, .mat-stroked-button {
  font-size: .75rem; 
  font-family: "Noto Sans", "Noto Sans Bold", sans-serif !important;
  padding: 0 1rem !important; 
  min-width: 88rem; 
}

.mat-button-toggle-group, 
.mat-button-toggle-standalone,
.ngx-datatable.material {
  box-shadow: none !important; 
  font-size: .8125rem; 
}

// .mat-button-toggle {
//   background: #222e44 !important; 
//   color: #f9f9f9;
// }

.mat-button-toggle-disabled {
  background: #222e44 !important; 
  color: #f9f9f9;
}
.mat-button-toggle-disabled.mat-button-toggle-checked {
  color: #ccc;
}

.mat-button-toggle.mat-button-toggle-checked { 
  color: #f5f5f5;
}




/* 기본 설정 datatable css 수정 
datatable의 세팅값은 각 태그에 존재함*/

.ngx-datatable.material { 
  display: flex; 
  flex-direction: column;
  align-items: flex-start; 

  div.visible { 
    display: flex; 
    flex-direction: column; 
    flex: 1; 

    .datatable-header { 
      background: #f5f5f5; 
      overflow: initial; 
      border-bottom: 0;   
    }

    .datatable-body {  
      flex: 1; 
      overflow-x: hidden; 
      overflow-y: auto; 

      .datatable-body-cell {
        display: flex; 
        align-items: center; 
        padding: .8rem 1.2rem; 
        border-top: 1px solid #f5f5f5; 
        font-size: .8125rem; 
        color: #585858;
        
        .datatable-body-cell-label { 
          width: inherit; 
          overflow: hidden; 
          text-overflow: ellipsis; 
          white-space: nowrap; 
        }
      }
    }
  }
}


.ngx-datatable .datatable-body .datatable-scroll { width: 100% !important; }

.ngx-datatable.material .empty-row { line-height: 28px; }

// datatable active 되었을 때 애니메이션 
.ngx-datatable.material.single-selection .datatable-body-row.active, 
.ngx-datatable.material.single-selection .datatable-body-row.active .datatable-row-group, 
.ngx-datatable.material.multi-selection .datatable-body-row.active, 
.ngx-datatable.material.multi-selection .datatable-body-row.active .datatable-row-group, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active .datatable-row-group, 
// datatable hover 되었을 때의 애니메이션 
.ngx-datatable.material.single-selection .datatable-body-row.active:hover, 
.ngx-datatable.material.single-selection .datatable-body-row.active:hover .datatable-row-group, 
.ngx-datatable.material.multi-selection .datatable-body-row.active:hover, 
.ngx-datatable.material.multi-selection .datatable-body-row.active:hover .datatable-row-group, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active:hover, 
.ngx-datatable.material.multi-click-selection .datatable-body-row.active:hover .datatable-row-group  {
  background: #f1f9f9; 
  cursor: pointer;
}

.ngx-datatable.material:not(.cell-selection) .datatable-body-row:hover, 
.ngx-datatable.material:not(.cell-selection) .datatable-body-row:hover .datatable-row-group {
  transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); 
  cursor: pointer;
}

.ngx-datatable.material .datatable-body .datatable-row-detail { 
  background: #f8f9f9; 
  padding: .4rem 1.25rem; 
  border: 1px dashed #eee; 
}

/* 기본 graph canvas의 창 값으로
좌우 정렬일 경우, 각 html에는 좌측의 사이즈를 
해당 scss파일에서 설정가능 */

div.graph-canvas { 
  max-width: 100%; 
  position: relative;
  z-index: 10;

  // zoom 버튼 위치수정 
  div.cy-panzoom { 
    top: 0.9375rem; 
    left: 0.9375rem; 
    // canvas 반응형높이값을위해 설정
    + div {
      width: 100% !important; 
      height: 100% !important; 
    } 
  }
}

mat-chip-list {
  position: absolute; 
  bottom: 1.25rem; 
  left: 1.25rem; 
  z-index: 32;
}

/* 각 페이지의 기본 input 값 설정 
*/

form, input { 
  width: 100%; 
  font-size: .875rem; 
  outline: none; 

  textarea {
    width: 100%; 
    padding-top: 1px; 
    overflow: hidden;
    border: none;
    outline: none;  
    resize: none; 
  }
}

.search {
  position: relative; 

  input {
    width: 18.75rem; 
    padding: .4rem 1.25rem;  
    border-radius: 1rem; 
    outline: none; 
    font-size: .75rem; 
    color: #848484; 
  }

  mat-icon { 
    font-size: 1.375rem; 
    color: #ea1347; 
    top: .3125rem; 
    right: .625rem; 
    position: absolute; 
  }
}

.mat-form-field.block { display: block; }

/* tab 관련 스타일 변경 */

.mat-tab-group.mat-primary .mat-ink-bar, 
.mat-tab-nav-bar.mat-primary .mat-ink-bar {
  background: #1bc9e4; 
}

.mat-tab-body-content { overflow: hidden !important }

.mat-tab-body-wrapper { 
  margin-top: 1.55rem; 
  flex: 1; 
}

.mat-tab-labels .mat-tab-label { 
  height: 3rem; 
  padding: 0 1.5rem; 
  min-width: 10rem; 
  font-size: 0.875rem;
}

/* CodeMirror
*/

.CodeMirror { 
  flex: 1; 
  font-family: "RobotoMono","RobotoMono Bold", sans-serif !important;
  font-size: .825rem;
  font-weight: 400; 
}

.CodeMirror pre { padding: 0 1.25rem; }
.CodeMirror-gutter-wrapper { left: -36px !important; }

// Dropdown menu  
.mat-subhead { 
  display: inline-block;
  padding: 1rem; 
}

// 텍스트 타이틀 옆에 붙는 before
.expand-cell::before, 
.empty-row::before, 
.mat-subhead::before, 
.slide h4::before,
.title::before  {
  content:'';
  background: #1bc9e4; 
  width: 8px; 
  height: 8px; 
  display: inline-block; 
  border-radius: 50%; 
  margin-right: .75rem; 
}

// dialog 관련 css 수정 
// .mat-form-field-appearance-legacy .mat-form-field-underline { background: #ddd; }
.mat-dialog-actions { flex-direction: row-reverse; }

// sidenav css 
.slide { 
  background: #fff; 
  width: 21.875rem; 
  height: calc(100% - 2.5rem); 
  margin: auto; 
  padding: 1.25rem; 
  top: 0; 
  right: 1.25rem; 
  bottom: 0; 
  position: absolute; 
  z-index: 22;
}

/* slide 숨기는 component 
사이즈를 조정할 수 있다*/ 

.viewbox {
  width: 3.125rem;   
  border-left: 0; 
  overflow: hidden;

  .scroll-hide {
    width: 80px; 
    height: 100%; 
    overflow-y: scroll; 
    
    ul { 
      width: 3.125rem;
      height: inherit;  
    }
  }
}

// list 

ul.list {
  width: 100%;
  font-size: .875rem; 
  color: #4d4d4d; 

  li {
    margin: 1.25rem 0; 
    padding: .625rem; 

    > span { 
      display: inline-block;
      min-width: 60px; 
      margin-right: 1.25rem; 
      padding: .25rem; 
      font-size: .75rem; 
      color: #979a9c;
    }
  }

  &.inline { width: initial; }

  &.textover > li {
    max-width: 43.75rem; 
    overflow: hidden; 
    white-space: nowrap; 
    text-overflow: ellipsis; 
  }

  li.side-margin { 
    padding: .625rem; 
    margin: 0;
    &.col {
      padding-right: 0; 
    }
  }

  &.icon {

    &.row > li {
      margin: 0 1.875rem; 
      padding: 0; 
      a{ min-height: 0; }
    }

    &.palette > li {
      margin: 0 .625rem;
      padding: 0; 
    }

    > li { 
      margin: 0; 
      padding: 0; 
      font-size: 90%; 
      a { 
        display: flex; 
        justify-content: center; 
        align-items: center; 
        min-height: 3.125rem; 
      }
    }
  }
}

// json 
.json { overflow-y: auto; }

pre {
  white-space: pre-wrap; 
  line-height: 1.5rem; 
  font-size: .825rem; 

  .string::before, .number::before, .boolean::before, .null::before {
    display: inline-block; 
    margin-right: 4px; 
    padding: 1px 4px; 
    border-radius: .225rem;
    line-height: 1rem;  
    font-size: .515rem; 
    color: white; 
  }
  .key {
    color: #4d4d4d;        
  }
  .string { 
    color: #15d3b2;
    &::before { 
        content:'string';
        background-color: #15d3b2; 
    }
  }
  .number { 
      color: #1bc9e4; 
      &::before { 
          content:'number';
          background-color: #1bc9e4; 
      }
  }
  .boolean { 
      color: #e62454; 
      &::before { 
          content:'boolean';
          background-color: #e62454; 
      }
  }
  .null { 
      color: #2e3c56; 
      &::before { 
          content:'null';
          background-color: #2e3c56; 
      }
  }
}

.cdk-global-overlay-wrapper { 
  width: 100%; 
}

// spinner 

.mat-progress-bar.mat-accent .mat-progress-bar-fill::after, 
.mat-progress-bar.mat-accent .mat-progress-bar-fill::before, 
 { 
  background: #1bc9e4 !important;
}
.mat-progress-bar.mat-accent .mat-progress-bar-background, 
.mat-progress-bar.mat-accent .mat-progress-bar-buffer { 
  background: #1bc9e483 !important; 
}